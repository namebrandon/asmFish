
MovePick_MAIN_SEARCH:
;Display 2, "MovePick_MAIN_SEARCH"
            ldr  x25, [x21, -1*sizeof.State + State.endMoves]
            ldr  w0, [x21, State.ttMove]
            adr  x2, MovePick_CAPTURES_GEN
            str  x2, [x21, State.stage]
             br  x29

MovePick_CAPTURES_GEN:
;Display 2, "MovePick_CAPTURES_GEN"
            ldr  x27, [x21, -1*sizeof.State + State.endMoves]
            mov  x24, x27
            str  x27, [x21, State.endBadCaptures]
             bl  Gen_Captures
            mov  x25, x27
            mov  x23, x24
  ScoreCaptures  x23, x27
            adr  x2, MovePick_GOOD_CAPTURES
            str  x2, [x21, State.stage]

MovePick_GOOD_CAPTURES:
;Display 2, "MovePick_GOOD_CAPTURES"
            cmp  x24, x25
            beq  MovePick_GOOD_CAPTURES.WhileDone
       PickBest  x24, x23, x25
            mov  w27, w1
            ldr  w4, [x21, State.ttMove]
            cmp  w1, w4
            beq  MovePick_GOOD_CAPTURES
    SeeSignTest  MovePick_GOOD_CAPTURES.Positive
            ldr  x2, [x21, State.endBadCaptures]
            cbz  w0, MovePick_GOOD_CAPTURES.Negative

MovePick_GOOD_CAPTURES.Positive:
;Display 2, "MovePick_GOOD_CAPTURES.Positive"
            mov  w0, w27
             br  x29

MovePick_GOOD_CAPTURES.Negative:
;Display 2, "MovePick_GOOD_CAPTURES.Negative"
            str  w27, [x2, ExtMove.move]
            add  x2, x2, sizeof.ExtMove
            str  x2, [x21, State.endBadCaptures]
              b  MovePick_GOOD_CAPTURES

MovePick_GOOD_CAPTURES.WhileDone:
;Display 2, "MovePick_GOOD_CAPTURES.WhileDone"
            adr  x2, MovePick_KILLERS
            str  x2, [x21, State.stage]

            ldr  w27, [x21, State.mpKillers + 4*0]
            and  w0, w27, 63
            mov  w1, w27
            add  x6, x20, Pos.board
           ldrb  w0, [x6, x0]
            cbz  w27, MovePick_KILLERS
            ldr  w4, [x21, State.ttMove]
            cmp  w27, w4
            beq  MovePick_KILLERS
            cmp  w27, MOVE_TYPE_EPCAP shl 12
            bhs  MovePick_GOOD_CAPTURES.special
           cbnz  w0, MovePick_KILLERS

MovePick_GOOD_CAPTURES.check:
;Display 2, "MovePick_GOOD_CAPTURES.check"
             bl  Move_IsPseudoLegal
            cbz  x0, MovePick_KILLERS
            mov  w0, w27
             br  x29

MovePick_GOOD_CAPTURES.special:
;Display 2, "MovePick_GOOD_CAPTURES.special"
            cmp  w27, MOVE_TYPE_CASTLE shl 12
            bhs  MovePick_GOOD_CAPTURES.check

MovePick_KILLERS:
;Display 2, "MovePick_KILLERS"
            adr  x2, MovePick_KILLERS2
            str  x2, [x21, State.stage]
            ldr  w27, [x21, State.mpKillers + 4*1]
            and  w0, w27, 63
            mov  w1, w27
            add  x6, x20, Pos.board
           ldrb  w0, [x6, x0]
            cbz  w27, MovePick_KILLERS2
            ldr  w4, [x21, State.ttMove]
            cmp  w27, w4
            beq  MovePick_KILLERS2
            cmp  w27, MOVE_TYPE_EPCAP shl 12
            bhs  MovePick_KILLERS.special
           cbnz  w0, MovePick_KILLERS2

MovePick_KILLERS.check:
;Display 2, "MovePick_KILLERS.check"
             bl  Move_IsPseudoLegal
            cbz  x0, MovePick_KILLERS2
            mov  w0, w27
             br  x29

MovePick_KILLERS.special:
;Display 2, "MovePick_KILLERS.special"
            cmp  w27, MOVE_TYPE_CASTLE shl 12
            bhs  MovePick_KILLERS.check

MovePick_KILLERS2:
;Display 2, "MovePick_KILLERS2"
            adr  x2, MovePick_QUIET_GEN
            str  x2, [x21, State.stage]
            ldr  w27, [x21, State.countermove]
            and  w0, w27, 63
            mov  w1, w27
            add  x6, x20, Pos.board
           ldrb  w0, [x6, x0]
            cbz  w27, MovePick_QUIET_GEN
            ldr  w4, [x21, State.ttMove]
            cmp  w27, w4
            beq  MovePick_QUIET_GEN
            ldr  w4, [x21, State.mpKillers + 4*0]
            cmp  w27, w4
            beq  MovePick_QUIET_GEN
            ldr  w4, [x21, State.mpKillers + 4*1]
            cmp  w27, w4
            beq  MovePick_QUIET_GEN
            cmp  w27, MOVE_TYPE_EPCAP shl 12
            bhs  MovePick_KILLERS2.special
           cbnz  w0, MovePick_QUIET_GEN

MovePick_KILLERS2.check:
;Display 2, "MovePick_KILLERS2.check"
             bl  Move_IsPseudoLegal
            cbz  x0, MovePick_QUIET_GEN
            mov  w0, w27
             br  x29

MovePick_KILLERS2.special:
;Display 2, "MovePick_KILLERS2.special"
            cmp  w27, MOVE_TYPE_CASTLE shl 12
            bhs  MovePick_KILLERS2.check


MovePick_QUIET_GEN:
;Display 2, "MovePick_QUIET_GEN"
            ldr  x27, [x21, State.endBadCaptures]
            mov  x24, x27
            mov  x22, x27
             bl  Gen_Quiets
            mov  x25, x27
    ScoreQuiets  x22, x27

            add  x10, x24, sizeof.ExtMove
            ldr  w2, [x21, State.depth]
            mov  w4, -4000
            mul  w2, w2, w4
            mov  x8, x10
            cmp  x10, x25
            bhs  MovePick_QUIET_GEN.SortDone

MovePick_QUIET_GEN.SortLoop:
            ldr  w17, [x8, ExtMove.value]
            ldr  x9, [x8, ExtMove.move]
            cmp  w17, w2
            blt  MovePick_QUIET_GEN.SortLoopSkip
            ldr  x0, [x10]
            str  x0, [x8]
            mov  x1, x10
            cmp  x10, x24
            beq  MovePick_QUIET_GEN.SortInnerDone

MovePick_QUIET_GEN.SortInner:
            ldr  x11, [x1, -sizeof.ExtMove]
            add  x0, x1, -sizeof.ExtMove
            ldr  w4, [x1, -sizeof.ExtMove + ExtMove.value]
            cmp  w17, w4
            ble  MovePick_QUIET_GEN.SortInnerDone
            str  x11, [x1]
            mov  x1, x0
            cmp  x0, x24
            bne  MovePick_QUIET_GEN.SortInner

MovePick_QUIET_GEN.SortInnerDone:
            add  x10, x10, sizeof.ExtMove
            str  x9, [x1]

MovePick_QUIET_GEN.SortLoopSkip:
            add  x8, x8, sizeof.ExtMove
            cmp  x8, x25
            blo  MovePick_QUIET_GEN.SortLoop

MovePick_QUIET_GEN.SortDone:
            adr  x2, MovePick_QUIETS
            str  x2, [x21, State.stage]

MovePick_QUIETS:
;Display 2, "MovePick_QUIETS"
            ldr  w0, [x24]
            cmp  x24, x25
            bhs  MovePick_QUIETS.WhileDone
            ldr  w4, [x24, ExtMove.value]
            and  w4, w4, w26
           tbnz  w4, 31, MovePick_QUIETS.WhileDone
            add  x24, x24, sizeof.ExtMove
            ldr  w4, [x21, State.ttMove]
            cmp  w0, w4
            beq  MovePick_QUIETS
            ldr  w4, [x21, State.mpKillers + 4*0]
            cmp  w0, w4
            beq  MovePick_QUIETS
            ldr  w4, [x21, State.mpKillers + 4*1]
            cmp  w0, w4
            beq  MovePick_QUIETS
            ldr  w4, [x21, State.countermove]
            cmp  w0, w4
            beq  MovePick_QUIETS
             br  x29

MovePick_QUIETS.WhileDone:
;Display 2, "MovePick_QUIETS.WhileDone"
            adr  x2, MovePick_BAD_CAPTURES
            str  x2, [x21, State.stage]
            ldr  x24, [x21, -1*sizeof.State + State.endMoves]

MovePick_BAD_CAPTURES:
;Display 2, "MovePick_BAD_CAPTURES"
            ldr  w0, [x24]
            ldr  x4, [x21, State.endBadCaptures]
            cmp  x24, x4
            bhs  MovePick_BAD_CAPTURES.IfDone
            add  x24, x24, sizeof.ExtMove
             br  x29

MovePick_BAD_CAPTURES.IfDone:
;Display 2, "MovePick_BAD_CAPTURES.IfDone"
            mov  w0, 0
             br  x29

MovePick_EVASIONS:
;Display 2, "MovePick_EVASIONS"
            ldr  x25, [x21, -1*sizeof.State + State.endMoves]
            ldr  w0, [x21, State.ttMove]
            adr  x2, MovePick_ALL_EVASIONS
            str  x2, [x21, State.stage]
             br  x29

MovePick_ALL_EVASIONS:
;Display 2, "MovePick_ALL_EVASIONS"
            ldr  x27, [x21, -1*sizeof.State + State.endMoves]
            mov  x24, x27
             bl  Gen_Evasions
            mov  x25, x27
            mov  x22, x24
  ScoreEvasions  x22, x25
            adr  x2, MovePick_REMAINING
            str  x2, [x21, State.stage]
              b  MovePick_REMAINING


MovePick_QSEARCH_WITH_CHECKS:
;Display 2, "MovePick_QSEARCH_WITH_CHECKS"
            ldr  x25, [x21, -1*sizeof.State + State.endMoves]
            ldr  w0, [x21, State.ttMove]
            adr  x2, MovePick_QCAPTURES_CHECKS_GEN
            str  x2, [x21, State.stage]
             br  x29

MovePick_QCAPTURES_CHECKS_GEN:
;Display 2, "MovePick_QCAPTURES_CHECKS_GEN"
            ldr  x27, [x21, -1*sizeof.State + State.endMoves]
            mov  x24, x27
             bl  Gen_Captures
            mov  x25, x27
            mov  x23, x24
  ScoreCaptures  x23, x27
            adr  x2, MovePick_QCAPTURES_CHECKS
            str  x2, [x21, State.stage]
              b  MovePick_QCAPTURES_CHECKS

MovePick_QSEARCH_WITHOUT_CHECKS:
;Display 2, "MovePick_QSEARCH_WITHOUT_CHECKS"
            ldr  x25, [x21, -1*sizeof.State + State.endMoves]
            ldr  w0, [x21, State.ttMove]
            adr  x2, MovePick_QCAPTURES_NO_CHECKS_GEN
            str  x2, [x21, State.stage]
             br  x29

MovePick_QCAPTURES_NO_CHECKS_GEN:
;Display 2, "MovePick_QCAPTURES_NO_CHECKS_GEN"
            ldr  x27, [x21, -1*sizeof.State + State.endMoves]
            mov  x24, x27
             bl  Gen_Captures
            mov  x25, x27
            mov  x23, x24
  ScoreCaptures  x23, x27
            adr  x2, MovePick_REMAINING
            str  x2, [x21, State.stage]

MovePick_REMAINING:
;Display 2, "MovePick_REMAINING"
            cmp  x24, x25
            bhs  MovePick_REMAINING.WhileDone
       PickBest  x24, x23, x25
            mov  w0, w1
            ldr  w4, [x21, State.ttMove]
            cmp  w1, w4
            beq  MovePick_REMAINING
             br  x29

MovePick_REMAINING.WhileDone:
;Display 2, "MovePick_REMAINING.WhileDone"
            mov  w0, 0
             br  x29


MovePick_QCAPTURES_CHECKS:
;Display 2, "MovePick_QCAPTURES_CHECKS"
            cmp  x24, x25
            bhs  MovePick_QCAPTURES_CHECKS.WhileDone
       PickBest  x24, x23, x25
            mov  w0, w1
            ldr  w4, [x21, State.ttMove]
            cmp  w1, w4
            beq  MovePick_QCAPTURES_CHECKS
             br  x29

MovePick_QCAPTURES_CHECKS.WhileDone:
            ldr  x27, [x21, -1*sizeof.State + State.endMoves]
            mov  x24, x27
             bl  Gen_QuietChecks
            mov  x25, x27
            adr  x2, MovePick_CHECKS
            str  x2, [x21, State.stage]

MovePick_CHECKS:
;Display 2, "MovePick_CHECKS"
            ldr  w0, [x24]
            cmp  x24, x25
            bhs  MovePick_CHECKS.IfDone
            add  x24, x24, sizeof.ExtMove
            ldr  w4, [x21, State.ttMove]
            cmp  w0, w4
            beq  MovePick_CHECKS
             br  x29

MovePick_CHECKS.IfDone:
            mov  w0, 0
             br  x29


MovePick_RECAPTURES_GEN:
;Display 2, "MovePick_RECAPTURES_GEN"
            ldr  x27, [x21, -1*sizeof.State + State.endMoves]
            mov  x24, x27
             bl  Gen_Captures
            mov  x25, x27
            mov  x23, x24
  ScoreCaptures  x23, x27
            adr  x2, MovePick_RECAPTURES
            str  x2, [x21, State.stage]


MovePick_RECAPTURES:
;Display 2, "MovePick_RECAPTURES"
            cmp  x24, x25
            beq  MovePick_RECAPTURES.WhileDone
       PickBest  x24, x23, x25
            mov  w0, w1
            and  w1, w1, 63
            ldr  w4, [x21, State.recaptureSquare]
            cmp  w1, w4
            bne  MovePick_RECAPTURES
             br  x29

MovePick_RECAPTURES.WhileDone:
            mov  w0, 0
             br  x29


MovePick_PROBCUT:
;Display 2, "MovePick_PROBCUT"
            ldr  x25, [x21, -1*sizeof.State + State.endMoves]
            ldr  w0, [x21, State.ttMove]
            adr  x2, MovePick_PROBCUT_GEN
            str  x2, [x21, State.stage]
             br  x29

MovePick_PROBCUT_GEN:
;Display 2, "MovePick_PROBCUT_GEN"
            ldr  x27, [x21, -1*sizeof.State+State.endMoves]
            mov  x24, x27
             bl  Gen_Captures
            mov  x25, x27
            mov  x23, x24
  ScoreCaptures  x23, x27
            adr  x2, MovePick_PROBCUT_2
            str  x2, [x21, State.stage]

MovePick_PROBCUT_2:
;Display 2, "MovePick_PROBCUT_2"
            cmp  x24, x25
            beq  MovePick_PROBCUT_2.WhileDone
       PickBest  x24, x23, x25
            mov  w0, w1
            mov  w27, w1
            ldr  w4, [x21, State.ttMove]
            cmp  w1, w4
            beq  MovePick_PROBCUT_2
            ldr  w2, [x21, State.threshold]
             bl  SeeTestGe
            cbz  w0, MovePick_PROBCUT_2
            mov  w0, w27
             br  x29

MovePick_PROBCUT_2.WhileDone:
            mov  w0, 0
             br  x29

