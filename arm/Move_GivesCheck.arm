Move_GivesCheck:
    ; in:  x20 Pos
    ;      x21 State
    ;      x1 move assumed to be psuedo legal
    ; out: w0 = 0 if not check
    ;      w0 = -1 if check

           ubfx  x8, x1, 6, 6
           ldrb  w10, [x20, x8]     ; Pos.board = 0
            add  x6, x21, State.checkSq
            and  x9, x1, 63
            and  w10, w10, 7
            ldr  x11, [x21, State.dcCandidates]
            ldr  x2, [x6, x10, lsl 3]
            mov  w0, -1
            cmp  x1, MOVE_TYPE_PROM shl 12
            lsr  x2, x2, x9
            lsr  x4, x11, x8
           tbnz  x2, 0, .Ret
           tbnz  x4, 0, .DiscoveredCheck
            mov  w0, 0
            bhs  .Special

.Ret:
            ret

.Special:
.Special.AfterPrologue:
            lsr  x1, x1, 12
            ldr  w16, [x20, Pos.sideToMove]
           ldrb  w17, [x21, State.ksq]
            ldr  x2, [x20, Pos.typeBB + 8*White]
            ldr  x4, [x20, Pos.typeBB + 8*Black]
            orr  x2, x2, x4
            mov  x4, 1
            lsl  x4, x4, x8
            bic  x2, x2, x4
            mov  x4, 1
            lsl  x4, x4, x9
            orr  x2, x2, x4
            adr  x4, .JmpTable - 4*4
            ldr  w0, [x4, x1, lsl 2]
            adr  x4, Move_GivesCheck
            add  x0, x0, x4
             br  x0
.JmpTable:
        dd  .PromKnight - Move_GivesCheck
        dd  .PromBishop - Move_GivesCheck
        dd  .PromRook - Move_GivesCheck
        dd  .PromQueen - Move_GivesCheck
        dd  .EpCapture - Move_GivesCheck
        dd  1
        dd  1
        dd  1
        dd  .Castling - Move_GivesCheck

.Castling:
            cmp  x8, x9
            adc  x16, x16, x16
            add  x7, x20, -Thread.rootPos + Thread.castling_rfrom
           ldrb  w0, [x7, x16]
            add  x7, x20, -Thread.rootPos + Thread.castling_rto
           ldrb  w11, [x7, x16]
            mov  x4, 1
            lsl  x4, x4, x0
            bic  x2, x2, x4
            mov  x4, 1
            lsl  x4, x4, x11
            orr  x2, x2, x4
            mov  x4, 1
            lsl  x4, x4, x9
            orr  x2, x2, x4
    RookAttacks  x0, x11, x2, x10, x4
            lsr  x0, x0, x17
            and  w0, w0, 1
            neg  w0, w0
            ret

.PromQueen:
  BishopAttacks  x8, x9, x2, x10, x4
    RookAttacks  x0, x9, x2, x10, x4
            orr  x0, x0, x8
            lsr  x0, x0, x17
            and  w0, w0, 1
            neg  w0, w0
            ret

.EpCapture:
            lsl  x1, x16, 1
            sub  x1, x1, 1
            add  x1, x9, x1, lsl 3
            ldr  x8, [x20, Pos.typeBB + 8*Bishop]
            ldr  x9, [x20, Pos.typeBB + 8*Rook]
            mov  x4, 1
            lsl  x4, x4, x1
            bic  x2, x2, x4
  BishopAttacks  x0, x17, x2, x10, x4
    RookAttacks  x11, x17, x2, x10, x4
            ldr  x10, [x20, Pos.typeBB + 8*Queen]
            orr  x8, x8, x10
            orr  x9, x9, x10
            and  x0, x0, x8
            and  x11, x11, x9
            orr  x0, x0, x11
            add  x3, x20, Pos.typeBB
            ldr  x4, [x3, x16, lsl 3]
            tst  x0, x4
           cset  x0, ne
            neg  w0, w0
            ret

.PromBishop:
  BishopAttacks  x0, x9, x2, x10, x4
            lsr  x0, x0, x17
            and  w0, w0, 1
            neg  w0, w0
            ret
.PromRook:
    RookAttacks  x0, x9, x2, x10, x4
            lsr  x0, x0, x17
            and  w0, w0, 1
            neg  w0, w0
            ret

.PromKnight:
            lea  x7, KnightAttacks
            ldr  x0, [x7, x9, lsl 3]
            lsr  x0, x0, x17
            and  w0, w0, 1
            neg  w0, w0
            ret        

.DiscoveredCheck:
           ldrb  w17, [x21, State.ksq]
            and  x0, x1, 64*64 - 1
            lea  x7, LineBB
            ldr  x0, [x7, x0, lsl 3]
            lsr  x0, x0, x17
           tbnz  x0, 0, .DiscoveredCheckRet
            mov  w0, -1
            ret

.DiscoveredCheckRet:
            mov  w0, 0
            cmp  x1, MOVE_TYPE_PROM shl 12
            bhs  .Special.AfterPrologue
            ret

