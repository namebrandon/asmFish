Search_Init:
            stp  x29, x30, [sp, -144]!
            add  x29, sp, 0
            stp  x23, x24, [sp, 48]
           _lea  x24, Reductions
            stp  d8, d9, [sp, 88]
            ldr  d9, Search_Init.constd_1p95
            stp  x19, x20, [sp, 16]
            mov  x20, 0
            stp  x25, x26, [sp, 64]
            mov  x26, -16384
            stp  x21, x22, [sp, 32]
            str  x27, [sp, 80]
            stp  d10, d11, [sp, 104]
            stp  d12, d13, [sp, 120]
.L5:
            mov  w22, 1
            lsl  x19, x20, 14
            eor  w25, w20, w22
            add  x19, x19, 260
            mul  x27, x20, x26
            add  x19, x24, x19
            and  w25, w25, w22
.L4:
          scvtf  d10, w22
            mov  x21, x19
            mov  w23, 1
.L3:
           fmov  d0, d10
             bl  Math_log_d_d
           fmov  d8, d0
          scvtf  d0, w23
             bl  Math_log_d_d
           fmul  d0, d8, d0
            add  x2, x21, 32768
           fdiv  d0, d0, d9
         fcvtas  w0, d0
           subs  w1, w0, 1
            str  w0, [x21]
           csel  w1, w1, wzr, pl
            cmp  w0, 1
            str  w1, [x2]
           cset  w1, gt
            tst  w1, w25
            beq  Search_Init.L2
            add  w0, w0, 1
            str  w0, [x21, x27]
.L2:
            add  w23, w23, 1
            add  x21, x21, 4
            cmp  w23, 64
            bne  Search_Init.L3
            add  w22, w22, 1
            add  x19, x19, 256
            cmp  w22, 64
            bne  Search_Init.L4
            add  x20, x20, 1
            cmp  x20, 2
            bne  Search_Init.L5

           _lea  x19, (FutilityMoveCounts + 64)
            mov  w20, 0
.L6:
          scvtf  d0, w20
            ldr  d1, Search_Init.constd_1p78
             bl  Math_pow_d_dd
            ldr  d1, Search_Init.constd_0p74
            ldr  d2, Search_Init.constd_2p4
          fmadd  d0, d0, d1, d2
         fcvtzs  w0, d0
            str  w0, [x19, -64]
          scvtf  d0, w20
           fmov  d1, 2.0
             bl  Math_pow_d_dd
           fmov  d1, 1.0
           fmov  d2, 5.0
          fmadd  d0, d0, d1, d2
         fcvtzs  w0, d0
            str  w0, [x19], 4
            add  w20, w20, 1
            cmp  w20, 16
            bne  Search_Init.L6

           _lea  x0, RazorMargin
            adr  x1, Search_Init.RazorMargin
            mov  x2, 4*4
             bl  MemoryCopy
           _lea  x0, _CaptureOrPromotion_or
            adr  x1, Search_Init._CaptureOrPromotion_or
            mov  x2, 8      ; copy both or and and
             bl  MemoryCopy

            ldp  x19, x20, [sp, 16]
            ldp  x21, x22, [sp, 32]
            ldp  x23, x24, [sp, 48]
            ldp  x25, x26, [sp, 64]
            ldp  d8, d9, [sp, 88]
            ldp  d10, d11, [sp, 104]
            ldp  d12, d13, [sp, 120]
            ldr  x27, [sp, 80]
            ldp  x29, x30, [sp], 144
            ret

.constd_1p95:
        dd   858993459
        dd   1073689395
.constd_1p78:
        dd   1202590843
        dd   1073511137
.constd_0p74:
        dd   2061584302
        dd   1072147988
.constd_2p4:
        dd   858993459
        dd   1073951539
        

.LC0:
        dd   3435973837
        dd   1073532108
.LC1:
        dd   2130303779
        dd   1072217194
.LC2:
        dd   858993459
        dd   1073951539
.LC3:
        dd   4123168604
        dd   1071602728
.LC4:
        dd   3951369912
        dd   1072740433
.LC5:
        dd   858993459
        dd   1074213683

.RazorMargin:
        dd 483, 570, 603, 554
._CaptureOrPromotion_or:
        db 0,-1,-1, 0
._CaptureOrPromotion_and:
        db -1,-1,-1, 0

