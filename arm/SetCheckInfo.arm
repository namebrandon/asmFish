SetCheckInfo:
    ; in: rbp  address of Pos
    ;     rbx  address of State

.AfterPrologue:
            ldr  w16, [x20, Pos.sideToMove]
            ldr  x4, [x20, Pos.typeBB + 8*King]
            add  x6, x20, Pos.typeBB
            ldr  x13, [x6, x16, lsl 3]
            eor  x16, x16, 1
            ldr  x12, [x6, x16, lsl 3]
            and  x14, x12, x4
            and  x15, x13, x4
            orr  x17, x12, x13
           rbit  x14, x14
           rbit  x15, x15
            clz  x14, x14
            clz  x15, x15
    ; x13 = our pieces
    ; x12 = their pieces
    ; x17 = all pieces
    ; x15 = our king square
    ; x14 = their king square

.go:

if DEBUG
        PushAll
             bl  Position_IsLegal
           cbnz  w0, Move_Do_post_posill
         PopAll
end if

            lea  x6, KnightAttacks
            add  x7, x6, WhitePawnAttacks - KnightAttacks
            add  x7, x7, x16, lsl 6+3
            add  x10, x21, x16, lsl 3
           strb  w14, [x21, State.ksq]
            ldr  x0, [x7, x14, lsl 3]
            ldr  x2, [x6, x14, lsl 3]
            str  x0, [x21, State.checkSq + 8*Pawn]
            str  x2, [x21, State.checkSq + 8*Knight]
  BishopAttacks  x0, x14, x17, x8, x4
    RookAttacks  x2, x14, x17, x8, x4
            mov  x11, 0
            str  x0, [x21, State.checkSq + 8*Bishop]
            str  x2, [x21, State.checkSq + 8*Rook]
            orr  x0, x0, x2
            str  x0, [x21, State.checkSq + 8*Queen]
            str  xzr, [x21, State.checkSq + 8*King]

    ; for their king
            mov  x0, 0
            ldr  x3, [x20, Pos.typeBB + 8*Bishop]
            ldr  x4, [x20, Pos.typeBB + 8*Rook]
 SliderBlockers  x0, x13, x14, x11, x17, x12, x1, x2, x8, x9, x3, x4, x5
            str  x11, [x10, State.pinnersForKing]
            str  x0, [x10, State.blockersForKing]
            and  x0, x0, x13
            str  x0, [x21, State.dcCandidates]

            eor  x16, x16, 1
            add  x10, x21, x16, lsl 3
            mov  x11, 0
            mov  x0, 0
 SliderBlockers  x0, x12, x15, x11, x17, x13, x1, x2, x8, x9, x3, x4, x5

            str  x11, [x10, State.pinnersForKing]
            str  x0, [x10, State.blockersForKing]
            and  x0, x0, x13
            str  x0, [x21, State.pinned]
            ret

